// AUTOGENERATED CODE -- DO NOT EDIT
use std::fmt::{Debug, Formatter, Result};
// AUTOGENERATED CODE -- DO NOT EDIT
use std::rc::Rc;
// AUTOGENERATED CODE -- DO NOT EDIT
use crate::concepts::attributes::{Attribute, AttributeTrait};
// AUTOGENERATED CODE -- DO NOT EDIT
use crate::concepts::{ArchetypeTrait, FormTrait, Tao};
// AUTOGENERATED CODE -- DO NOT EDIT
use crate::node_wrappers::{debug_wrapper, CommonNodeTrait, FinalNode};

/// Describes the owner as inheriting all attributes of the value.
#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]
// AUTOGENERATED CODE -- DO NOT EDIT
pub struct Inherits {
    // AUTOGENERATED CODE -- DO NOT EDIT
    attr: Attribute,
} // AUTOGENERATED CODE -- DO NOT EDIT

// AUTOGENERATED CODE -- DO NOT EDIT
impl Debug for Inherits {
    // AUTOGENERATED CODE -- DO NOT EDIT
    fn fmt(&self, f: &mut Formatter) -> Result {
        // AUTOGENERATED CODE -- DO NOT EDIT
        debug_wrapper("Inherits", Box::new(self), f)
    } // AUTOGENERATED CODE -- DO NOT EDIT
} // AUTOGENERATED CODE -- DO NOT EDIT

// AUTOGENERATED CODE -- DO NOT EDIT
impl From<usize> for Inherits {
    // AUTOGENERATED CODE -- DO NOT EDIT
    fn from(id: usize) -> Self {
        // AUTOGENERATED CODE -- DO NOT EDIT
        Self {
            // AUTOGENERATED CODE -- DO NOT EDIT
            attr: Attribute::from(id),
        } // AUTOGENERATED CODE -- DO NOT EDIT
    } // AUTOGENERATED CODE -- DO NOT EDIT
} // AUTOGENERATED CODE -- DO NOT EDIT

// AUTOGENERATED CODE -- DO NOT EDIT
impl CommonNodeTrait for Inherits {
    // AUTOGENERATED CODE -- DO NOT EDIT
    fn id(&self) -> usize {
        // AUTOGENERATED CODE -- DO NOT EDIT
        self.attr.id()
    } // AUTOGENERATED CODE -- DO NOT EDIT

    // AUTOGENERATED CODE -- DO NOT EDIT
    fn set_internal_name(&mut self, name: String) {
        // AUTOGENERATED CODE -- DO NOT EDIT
        self.attr.set_internal_name(name);
    } // AUTOGENERATED CODE -- DO NOT EDIT

    // AUTOGENERATED CODE -- DO NOT EDIT
    fn internal_name(&self) -> Option<Rc<String>> {
        // AUTOGENERATED CODE -- DO NOT EDIT
        self.attr.internal_name()
    } // AUTOGENERATED CODE -- DO NOT EDIT
} // AUTOGENERATED CODE -- DO NOT EDIT

// AUTOGENERATED CODE -- DO NOT EDIT
impl ArchetypeTrait<Inherits> for Inherits {
    // AUTOGENERATED CODE -- DO NOT EDIT
    const TYPE_ID: usize = 5;
    // AUTOGENERATED CODE -- DO NOT EDIT
    const TYPE_NAME: &'static str = "Inherits";
    // AUTOGENERATED CODE -- DO NOT EDIT
    const PARENT_TYPE_ID: usize = Attribute::TYPE_ID;

    // AUTOGENERATED CODE -- DO NOT EDIT
    fn individuate_with_parent(parent_id: usize) -> Self {
        // AUTOGENERATED CODE -- DO NOT EDIT
        Self {
            // AUTOGENERATED CODE -- DO NOT EDIT
            attr: Attribute::individuate_with_parent(parent_id),
        } // AUTOGENERATED CODE -- DO NOT EDIT
    } // AUTOGENERATED CODE -- DO NOT EDIT
} // AUTOGENERATED CODE -- DO NOT EDIT

// AUTOGENERATED CODE -- DO NOT EDIT
impl FormTrait for Inherits {
    // AUTOGENERATED CODE -- DO NOT EDIT
    fn essence(&self) -> &FinalNode {
        // AUTOGENERATED CODE -- DO NOT EDIT
        self.attr.essence()
    } // AUTOGENERATED CODE -- DO NOT EDIT

    // AUTOGENERATED CODE -- DO NOT EDIT
    fn essence_mut(&mut self) -> &mut FinalNode {
        // AUTOGENERATED CODE -- DO NOT EDIT
        self.attr.essence_mut()
    } // AUTOGENERATED CODE -- DO NOT EDIT
} // AUTOGENERATED CODE -- DO NOT EDIT

// AUTOGENERATED CODE -- DO NOT EDIT
impl AttributeTrait<Inherits> for Inherits {
    // AUTOGENERATED CODE -- DO NOT EDIT
    fn set_owner(&mut self, owner: Box<&dyn FormTrait>) {
        // AUTOGENERATED CODE -- DO NOT EDIT
        self.attr.set_owner(owner);
    } // AUTOGENERATED CODE -- DO NOT EDIT

    // AUTOGENERATED CODE -- DO NOT EDIT
    fn owner(&self) -> Option<Tao> {
        // AUTOGENERATED CODE -- DO NOT EDIT
        self.attr.owner()
    } // AUTOGENERATED CODE -- DO NOT EDIT

    // AUTOGENERATED CODE -- DO NOT EDIT
    fn set_value(&mut self, value: Box<&dyn FormTrait>) {
        // AUTOGENERATED CODE -- DO NOT EDIT
        self.attr.set_value(value);
    } // AUTOGENERATED CODE -- DO NOT EDIT

    // AUTOGENERATED CODE -- DO NOT EDIT
    fn value(&self) -> Option<Tao> {
        // AUTOGENERATED CODE -- DO NOT EDIT
        self.attr.value()
    } // AUTOGENERATED CODE -- DO NOT EDIT
} // AUTOGENERATED CODE -- DO NOT EDIT

// AUTOGENERATED CODE -- DO NOT EDIT
#[cfg(test)]
// AUTOGENERATED CODE -- DO NOT EDIT
mod tests {
    // AUTOGENERATED CODE -- DO NOT EDIT
    use super::*;
    // AUTOGENERATED CODE -- DO NOT EDIT
    use crate::graph::bind_in_memory_graph;

    // AUTOGENERATED CODE -- DO NOT EDIT
    #[test]
    // AUTOGENERATED CODE -- DO NOT EDIT
    fn check_type_created() {
        // AUTOGENERATED CODE -- DO NOT EDIT
        bind_in_memory_graph();
        // AUTOGENERATED CODE -- DO NOT EDIT
        assert_eq!(Inherits::archetype().id(), Inherits::TYPE_ID);
        // AUTOGENERATED CODE -- DO NOT EDIT
        assert_eq!(
            // AUTOGENERATED CODE -- DO NOT EDIT
            Inherits::archetype().internal_name(),
            // AUTOGENERATED CODE -- DO NOT EDIT
            Some(Rc::new(Inherits::TYPE_NAME.to_string()))
        ); // AUTOGENERATED CODE -- DO NOT EDIT
    } // AUTOGENERATED CODE -- DO NOT EDIT

    // AUTOGENERATED CODE -- DO NOT EDIT
    #[test]
    // AUTOGENERATED CODE -- DO NOT EDIT
    fn from_node_id() {
        // AUTOGENERATED CODE -- DO NOT EDIT
        bind_in_memory_graph();
        // AUTOGENERATED CODE -- DO NOT EDIT
        let concept = Inherits::individuate();
        // AUTOGENERATED CODE -- DO NOT EDIT
        let concept_copy = Inherits::from(concept.id());
        // AUTOGENERATED CODE -- DO NOT EDIT
        assert_eq!(concept.id(), concept_copy.id());
    } // AUTOGENERATED CODE -- DO NOT EDIT

    // AUTOGENERATED CODE -- DO NOT EDIT
    #[test]
    // AUTOGENERATED CODE -- DO NOT EDIT
    fn create_and_retrieve_node_id() {
        // AUTOGENERATED CODE -- DO NOT EDIT
        bind_in_memory_graph();
        // AUTOGENERATED CODE -- DO NOT EDIT
        let concept1 = Inherits::individuate();
        // AUTOGENERATED CODE -- DO NOT EDIT
        let concept2 = Inherits::individuate();
        // AUTOGENERATED CODE -- DO NOT EDIT
        assert_eq!(concept1.id() + 1, concept2.id());
    } // AUTOGENERATED CODE -- DO NOT EDIT

    // AUTOGENERATED CODE -- DO NOT EDIT
    #[test]
    // AUTOGENERATED CODE -- DO NOT EDIT
    fn create_and_retrieve_node_name() {
        // AUTOGENERATED CODE -- DO NOT EDIT
        bind_in_memory_graph();
        // AUTOGENERATED CODE -- DO NOT EDIT
        let mut concept = Inherits::individuate();
        // AUTOGENERATED CODE -- DO NOT EDIT
        concept.set_internal_name("A".to_string());
        // AUTOGENERATED CODE -- DO NOT EDIT
        assert_eq!(concept.internal_name(), Some(Rc::new("A".to_string())));
    } // AUTOGENERATED CODE -- DO NOT EDIT

    // AUTOGENERATED CODE -- DO NOT EDIT
    #[test]
    // AUTOGENERATED CODE -- DO NOT EDIT
    fn get_owner() {
        // AUTOGENERATED CODE -- DO NOT EDIT
        bind_in_memory_graph();
        // AUTOGENERATED CODE -- DO NOT EDIT
        let mut instance = Inherits::individuate();
        // AUTOGENERATED CODE -- DO NOT EDIT
        let owner_of_owner = Inherits::individuate();
        // AUTOGENERATED CODE -- DO NOT EDIT
        instance.set_owner(Box::new(&owner_of_owner));
        // AUTOGENERATED CODE -- DO NOT EDIT
        assert_eq!(instance.owner(), Some(owner_of_owner.ego_death()));
        // AUTOGENERATED CODE -- DO NOT EDIT
        assert_eq!(instance.value(), None);
    } // AUTOGENERATED CODE -- DO NOT EDIT

    // AUTOGENERATED CODE -- DO NOT EDIT
    #[test]
    // AUTOGENERATED CODE -- DO NOT EDIT
    fn get_value() {
        // AUTOGENERATED CODE -- DO NOT EDIT
        bind_in_memory_graph();
        // AUTOGENERATED CODE -- DO NOT EDIT
        let mut instance = Inherits::individuate();
        // AUTOGENERATED CODE -- DO NOT EDIT
        let value_of_owner = Inherits::individuate();
        // AUTOGENERATED CODE -- DO NOT EDIT
        instance.set_value(Box::new(&value_of_owner));
        // AUTOGENERATED CODE -- DO NOT EDIT
        assert_eq!(instance.owner(), None);
        // AUTOGENERATED CODE -- DO NOT EDIT
        assert_eq!(instance.value(), Some(value_of_owner.ego_death()));
    } // AUTOGENERATED CODE -- DO NOT EDIT
} // AUTOGENERATED CODE -- DO NOT EDIT
